syntax = "proto3";

package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server

    rpc StoreFile(stream FileContents) returns (FileDetails);

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server

    rpc FetchFile(File) returns (stream FileContents);

    // 3. REQUIRED (Parts 1 & 2): A method to list all files on the server

    rpc ListFiles(NoArgs) returns (ListOfFiles);

    // 4. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server

    rpc GetFileStatus(File) returns (FileStatus);

    // 5. REQUIRED (Part 2 only): A method to request a write lock from the server

    rpc GetWriteLock(File) returns (WriteLock);

    // 6. REQUIRED (Part 2 only): A method named CallbackList to handle asynchronous file listing requests
    //                            from a client. This method should return a listing of files along with their
    //                            attribute information. The expected attribute information should include name,
    //                            size, modified time, and creation time.

    rpc CallbackList(File) returns (ListOfFiles);

    // 7. REQUIRED (Part 2 only): A method to delete a file from the server
    rpc DeleteFile(File) returns (FileDetails);

    // 8. Any other methods you deem necessary to complete the tasks of this assignment


}

// Add your message types here
message FileDetails {
    string fileName = 1;
    int32 modifiedTime = 2;
}

message ListOfFiles {
    repeated FileStatus fileStatus = 1;
}

message WriteLock {

}

message NoArgs {

}

 message FileContents {
     bytes chunckContent = 1;
 }

 message File {
     string name = 1;
 }

 message FileStatus {
        string fileName = 1;
        int32 size = 2;
        int32 modifiedTime = 3;
        int32 creationTime = 4;
    }

